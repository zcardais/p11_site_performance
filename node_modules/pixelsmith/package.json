{
  "_args": [
    [
      {
        "raw": "pixelsmith@~2.1.0",
        "scope": null,
        "escapedName": "pixelsmith",
        "name": "pixelsmith",
        "rawSpec": "~2.1.0",
        "spec": ">=2.1.0 <2.2.0",
        "type": "range"
      },
      "/Users/zachcardais/Sites/Treehouse/FEWD Techdegree/p11_site_performance/node_modules/spritesmith"
    ]
  ],
  "_from": "pixelsmith@>=2.1.0 <2.2.0",
  "_id": "pixelsmith@2.1.1",
  "_inCache": true,
  "_location": "/pixelsmith",
  "_nodeVersion": "4.4.3",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/pixelsmith-2.1.1.tgz_1463188751605_0.05552260274998844"
  },
  "_npmUser": {
    "name": "twolfson",
    "email": "todd@twolfson.com"
  },
  "_npmVersion": "2.15.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pixelsmith@~2.1.0",
    "scope": null,
    "escapedName": "pixelsmith",
    "name": "pixelsmith",
    "rawSpec": "~2.1.0",
    "spec": ">=2.1.0 <2.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/spritesmith"
  ],
  "_resolved": "https://registry.npmjs.org/pixelsmith/-/pixelsmith-2.1.1.tgz",
  "_shasum": "dd5653c87bac9a88c0e687ea4ff3ab5fcb0fd6e5",
  "_shrinkwrap": null,
  "_spec": "pixelsmith@~2.1.0",
  "_where": "/Users/zachcardais/Sites/Treehouse/FEWD Techdegree/p11_site_performance/node_modules/spritesmith",
  "author": {
    "name": "Todd Wolfson",
    "email": "todd@twolfson.com",
    "url": "http://twolfson.com/"
  },
  "bugs": {
    "url": "https://github.com/twolfson/pixelsmith/issues"
  },
  "dependencies": {
    "async": "~0.9.0",
    "concat-stream": "~1.5.1",
    "get-pixels": "~3.3.0",
    "mime-types": "~2.1.7",
    "ndarray": "~1.0.15",
    "ndarray-fill": "~1.0.1",
    "obj-extend": "~0.1.0",
    "save-pixels": "~2.3.0",
    "vinyl-file": "~1.3.0"
  },
  "description": "Node based engine for spritesmith",
  "devDependencies": {
    "foundry": "~4.3.2",
    "foundry-release-git": "~2.0.2",
    "foundry-release-npm": "~2.0.2",
    "jscs": "~1.7.3",
    "jshint": "~2.5.10",
    "mocha": "~1.21.4",
    "spritesmith-engine-test": "~4.0.0",
    "twolfson-style": "~1.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "dd5653c87bac9a88c0e687ea4ff3ab5fcb0fd6e5",
    "tarball": "https://registry.npmjs.org/pixelsmith/-/pixelsmith-2.1.1.tgz"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "foundry": {
    "releaseCommands": [
      "foundry-release-git",
      "foundry-release-npm"
    ]
  },
  "gitHead": "3d3ab987fb6de31c76a1a46f3a9892b6dd0e022b",
  "homepage": "https://github.com/twolfson/pixelsmith",
  "keywords": [
    "spritesmith",
    "image",
    "spritesmith-engine"
  ],
  "licenses": "Unlicense",
  "main": "lib/engine",
  "maintainers": [
    {
      "name": "twolfson",
      "email": "todd@twolfson.com"
    }
  ],
  "name": "pixelsmith",
  "optionalDependencies": {},
  "readme": "# pixelsmith [![Build status](https://travis-ci.org/twolfson/pixelsmith.png?branch=master)](https://travis-ci.org/twolfson/pixelsmith)\n\nNode based engine for [spritesmith][] built of top of [get-pixels][] and [save-pixels][].\n\n[spritesmith]: https://github.com/Ensighten/spritesmith\n[get-pixels]: https://github.com/mikolalysenko/get-pixels\n[save-pixels]: https://github.com/mikolalysenko/save-pixels\n\nThis can be used for constructing a canvas, placing images on it, and extracting the result image.\n\n## Getting Started\nInstall the module with: `npm install pixelsmith`\n\n```js\n// Load in our dependencies\nvar Pixelsmith = require('pixelsmith');\n\n// Create a new engine\nvar pixelsmith = new Pixelsmith();\n\n// Interpret some images from disk\npixelsmith.createImages(['img1.jpg', 'img2.png'], function handleImages (err, imgs) {\n  // If there was an error, throw it\n  if (err) {\n    throw err;\n  }\n\n  // We recieve images in the same order they were given\n  imgs[0].width; // 50 (pixels)\n  imgs[0].height; // 100 (pixels)\n\n  // Create a canvas that fits our images (200px wide, 300px tall)\n  var canvas = pixelsmith.createCanvas(200, 300);\n\n  // Add the images to our canvas (at x=0, y=0 and x=50, y=100 respectively)\n  canvas.addImage(imgs[0], 0, 0);\n  canvas.addImage(imgs[1], 50, 100);\n\n  // Export canvas to image\n  var resultStream = canvas['export']({format: 'png'});\n  resultStream; // Readable stream outputting PNG image of the canvas\n});\n```\n\n## Documentation\nThis module was built to the specification for spritesmith engines.\n\n**Specification version:** 2.0.0\n\nhttps://github.com/twolfson/spritesmith-engine-spec/tree/2.0.0\n\n### `engine.createImages(images, cb)`\nOur `createImages` methods supports the following types of images:\n\n- image `String` - Filepath to image\n- image `Object` - Vinyl object with buffer for image (uses buffer)\n- image `Object` - Vinyl object with stream for image (uses stream)\n- image `Object` - Vinyl object with `null` for image (reads buffer from provided filepath)\n\n### `canvas.export(options)`\nOur `export` method provides support for the following options:\n\n- options `Object`\n    - background `Number[]` - `rgba` array of value for background\n        - By default, the background is `[0, 0, 0, 0]` (transparent black)\n        - `[0]` - Red value for background\n            - Can range from 0 to 255\n        - `[1]` - Green value for background\n            - Can range from 0 to 255\n        - `[2]` - Blue value for background\n            - Can range from 0 to 255\n        - `[3]` - Alpha/transparency value for background\n            - Can range from 0 to 255\n    - quality `Number` - Optional quality percentage for JPEG images\n        - This value can range from 0 to 100\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via `npm run lint` and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gratipay] via [gratipay][].\n\n[![Support via Gratipay][gratipay-badge]][gratipay]\n\n[gratipay-badge]: https://cdn.rawgit.com/gratipay/gratipay-badge/2.x.x/dist/gratipay.png\n[gratipay]: https://www.gratipay.com/twolfson/\n\n## Unlicense\nAs of Nov 24 2014, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/twolfson/pixelsmith.git"
  },
  "scripts": {
    "lint": "twolfson-style lint lib/ test/",
    "precheck": "twolfson-style precheck lib/ test/",
    "pretest": "twolfson-style install",
    "test": "npm run precheck && mocha --reporter dot && npm run lint"
  },
  "version": "2.1.1"
}
